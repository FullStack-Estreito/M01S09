// <auto-generated />
using M01S09.Aula03.ExercicioFloricultura.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace M01S09.Aula03.ExercicioFloricultura.Migrations
{
    [DbContext(typeof(FloriculturaContexto))]
    partial class FloriculturaContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estoque", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cliente_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cliente_Id");

                    b.ToTable("Pedido", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.PedidoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Pedido_Id")
                        .HasColumnType("int");

                    b.Property<int>("Produto_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Pedido_Id");

                    b.HasIndex("Produto_Id");

                    b.ToTable("PedidoProduto", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estoque_Id")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Tipo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estoque_Id")
                        .IsUnique();

                    b.HasIndex("Tipo_Id");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Produto", (string)null);
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Pedido", b =>
                {
                    b.HasOne("M01S09.Aula03.ExercicioFloricultura.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("Cliente_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Pedido_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.PedidoProduto", b =>
                {
                    b.HasOne("M01S09.Aula03.ExercicioFloricultura.Models.Pedido", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("Pedido_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Pedido_Produto");

                    b.HasOne("M01S09.Aula03.ExercicioFloricultura.Models.Produto", "Produto")
                        .WithMany("Pedidos")
                        .HasForeignKey("Produto_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Produto_Pedido");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Produto", b =>
                {
                    b.HasOne("M01S09.Aula03.ExercicioFloricultura.Models.Estoque", "Estoque")
                        .WithOne("Produto")
                        .HasForeignKey("M01S09.Aula03.ExercicioFloricultura.Models.Produto", "Estoque_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Produto_Estoque");

                    b.HasOne("M01S09.Aula03.ExercicioFloricultura.Models.TipoProduto", "Tipo")
                        .WithMany("Produtos")
                        .HasForeignKey("Tipo_Id")
                        .IsRequired()
                        .HasConstraintName("FK__Produto_Tipo");

                    b.Navigation("Estoque");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Estoque", b =>
                {
                    b.Navigation("Produto")
                        .IsRequired();
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Pedido", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.Produto", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("M01S09.Aula03.ExercicioFloricultura.Models.TipoProduto", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
